<?xml version="1.0" encoding="utf-8"?>
<project xmlns="http://nant.sf.net/schemas/nant.xsd" name="SVN">

  <property name="SVN.Debug" value="false" overwrite="false" />

  <include buildfile="SVN.Properties.xml" />

  <property name="Private.SVN.ReportDirectory" value="${BuildDirectory}\SVN" overwrite="false"/>

  <!--
	The following properties should be specified in the calling script.
	
	<property name="SVN.URI" value="" />
	<property name="SVN.Username" value="" />
	<property name="SVN.Password" value="" />
	
	-->

  <!-- The following will be set by the target. 
  
  <property name="SourceControl.ThirdPartyChanged" value=""/>
  -->
  <target name="SourceControl.CleanGetOfThirdPartyDirectory" >
    <call target="SourceModificationReport.GetOldestModificationTime"/>

    <property name="Private.SourceControl.CleanGetOfThirdPartyDirectory.ThirdPartyHistoryFile" value="${Private.SVN.ReportDirectory}\ThirdPartyHistory.xml"/>
    <exec program="svn" output="${Private.SourceControl.CleanGetOfThirdPartyDirectory.ThirdPartyHistoryFile}">
      <arg line="log" />
      <arg line="--xml" />
      <arg line="-r HEAD" />
      <arg line="${SVN.URI}" />
      <arg line='"Third Party"' />
    </exec>

    <property name="Private.SourceControl.CleanGetOfThirdPartyDirectory.ThirdPartyHistoryPathsFile" value="${Private.SVN.ReportDirectory}\ThirdPartyHistoryPaths.txt"/>
    <style style="Packages\VisualSourceSafe\HistoryPaths.xsl" in="${Private.SourceControl.CleanGetOfThirdPartyDirectory.ThirdPartyHistoryFile}" out="${Private.SourceControl.CleanGetOfThirdPartyDirectory.ThirdPartyHistoryPathsFile}" />

    <property name="SourceControl.ThirdPartyChanged" value="false"/>
    <loadfile file="${Private.SourceControl.CleanGetOfThirdPartyDirectory.ThirdPartyHistoryPathsFile}" property="SourceControl.ThirdPartyChanged" />

    <if test="${SourceControl.ThirdPartyChanged}" >
      <if test="${directory::exists(ThirdPartyDirectory)}" >
        <attrib readonly="false">
          <fileset>
            <include name="${ThirdPartyDirectory}\*" />
          </fileset>
        </attrib>

        <trycatch>
          <try>
            <delete dir="${ThirdPartyDirectory}"/>
          </try>
          <catch>
            <exec program="cmd" commandline='/C "rmdir /S /Q "${ThirdPartyDirectory}""' />
          </catch>
        </trycatch>
      </if>
      <mkdir dir="${ThirdPartyDirectory}" />
      <svn-checkout username="${SVN.Username}" password="${SVN.Password}" uri="${SVN.URI}/Third Party" recursive ="true" destination ="${ThirdPartyDirectory}" />
    </if>
  </target>

  <target name="SourceControl.CleanGetOfProductDirectory" >
    <if test="${directory::exists(ProductDirectory)}" >
      <attrib readonly="false">
        <fileset>
          <include name="${ProductDirectory}\*" />
        </fileset>
      </attrib>

      <trycatch>
        <try>
          <delete dir="${ProductDirectory}"/>
        </try>
        <catch>
          <exec program="cmd" commandline='/C "rmdir /S /Q "${ProductDirectory}""' />
        </catch>
      </trycatch>
    </if>
    <mkdir dir="${ProductDirectory}" />
    <svn-checkout username="${SVN.Username}" password="${SVN.Password}" uri="${SVN.URI}/Product" recursive ="true" destination ="${ProductDirectory}" />
  </target>

  <!--
  The following properties should be specified in the calling script.
  
  <property name="SourceControl.CheckOut.File" value="${Private.Versioning.AssemblyInfoFile}"/>
  -->
  <target name="SourceControl.CheckOut" >
    
  </target>

  <!--
  The following properties should be specified in the calling script.
  
  <property name="SourceControl.CheckIn.File" value="${Private.Versioning.AssemblyInfoFile}"/>
  -->
  <target name="SourceControl.CheckIn" >
    <exec program="svn" >
      <arg line="commit" />
      <arg line="--non-interactive" />
      <arg line="--username ${SVN.Username}" />
      <arg line="--password ${SVN.Password}" />
      <arg line='-m "Modified by build script in build ${CCNetLabel}"' />
      <arg line='"${SourceControl.CheckIn.File}"' />
    </exec>
  </target>

  <target name="SourceControl.SetUp">
    <mkdir unless="${directory::exists(Private.SVN.ReportDirectory)}" dir="${Private.SVN.ReportDirectory}"/>
  </target>

  <target name="SourceControl.TearDown">

  </target>

</project>